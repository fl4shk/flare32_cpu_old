`include "src/misc_defines.svinc"

package pkg_main;

`define STATE_WIDTH 8
`define STATE_MSB_POS `WIDTH_TO_MSB_POS(`STATE_WIDTH)

typedef enum bit [`STATE_MSB_POS:0]
{
	StInit,

	StQuit
} State;


endpackage


module Main;
	
	import pkg_main::*;


	bit __clk;

	bit [`STATE_MSB_POS:0] __state;


	task set_state;
		input [`STATE_MSB_POS:0] some_state;

		__state <= some_state;
	endtask



	initial
	begin
		__clk = 0;
		__state = pkg_main::StInit;
	end


	always
	begin
		#20
		__clk = !__clk;
	end


	always @ (posedge __clk)
	begin
		case (__state)
			pkg_main::StInit:
			begin
				//__state <= pkg_main::StQuit;
				set_state(pkg_main::StQuit);
				$display("I'm in starting state!");
			end

			pkg_main::StQuit:
			begin
				$display("I'm quitting now!");
				$finish;
			end
		endcase
	end



endmodule
