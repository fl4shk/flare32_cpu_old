`include "src/cpu/cpu_defines.svinc"


package pkg_temp_ind_0;

parameter high = 3;

typedef enum bit [high:0]
{
	Ld_RaIndex
} Ld;

typedef enum bit [high:0]
{
	AluOp_RaIndex,
	AluOp_AluOut
} AluOp;

typedef enum bit [high:0]
{
	AluDotFOp_RaIndex,
	AluDotFOp_AluOut,
	AluDotFOp_FlagsOut
} AluDotFOp;

typedef enum bit [high:0]
{
	Eni_Ie
} Eni;

typedef enum bit [high:0]
{
	Dii_Ie
} Dii;

typedef enum bit [high:0]
{
	Reti_Ira,
	Reti_Ie
} Reti;

typedef enum bit [high:0]
{
	JumpIra_Ira
} JumpIra;


// cpy rA, ira
typedef enum bit [high:0]
{
	CpyRaIra_RaIndex,
	CpyRaIra_Ira
} CpyRaIra;

// cpy ira, rA
typedef enum bit [high:0]
{
	CpyIraRa_Ra
} CpyIraRa;

// push flags
typedef enum bit [high:0]
{
	PushFlags_NewSp
} PushFlags;

// pop flags
typedef enum bit [high:0]
{
	PopFlags_NewSp
} PopFlags;

// cpy rA, flags
typedef enum bit [high:0]
{
	CpyRaFlags_RaIndex,
	CpyRaFlags_Flags
} CpyRaFlags;

// cpy flags, rA
typedef enum bit [high:0]
{
	CpyFlagsRa_Ra
} CpyFlagsRa;

// call rA, rB
typedef enum bit [high:0]
{
	// Destination (rA + rB)
	CallRaRb_Dst
} CallRaRb;

// jump rA, rB
typedef enum bit [high:0]
{
	// Destination (rA + rB)
	JumpRaRb_Dst
} JumpRaRb;

// cpy rA, pc
typedef enum bit [high:0]
{
	CpyRaPc_RaIndex
} CpyRaPc;

// cpy rA, rB
typedef enum bit [high:0]
{
	CpyRaRb_RaIndex,
	CpyRaRb_Rb
} CpyRaRb;

// seh rA, rB
typedef enum bit [high:0]
{
	SehRaRb_RaIndex,
	SehRaRb_SehOut
} SehRaRb;

// seb rA, rB
typedef enum bit [high:0]
{
	SebRaRb_RaIndex,
	SebRaRb_SebOut
} SebRaRb;

// cmp rA, rB
typedef enum bit [high:0]
{
	CmpRaRb_NewFlags
} CmpRaRb;

endpackage



package pkg_temp_ind_1;

parameter high = 3;

typedef enum bit [high:0]
{
	AluOp_RaIndex
} AluOp;

typedef enum bit [high:0]
{
	// Destination
	BranchOp_Dst,

	// Whether the branch will be taken
	BranchOp_BranchTaken
} BranchOp;

typedef enum bit [high:0]
{
	XorsiOp_RaIndex
} XorsiOp;

typedef enum bit [high:0]
{
	LuiOp_RaIndex,
	LuiOp_UImm16
} LuiOp;


endpackage


package pkg_temp_ind_2;

parameter high = 3;


endpackage


package pkg_temp_ind_3;

parameter high = 3;


endpackage
